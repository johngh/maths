#!/usr/bin/perl

use Math::Trig;

my $center_x = 421;
my $center_y = 300;

my $table = 12;

my $band_width = 30;
my $font = 18;
my $num_offset = 10;

my $spoke_length = ( $table + 1 ) * $band_width;

my $seg_ang = 360 / $table;

printf <<EOT;
<svg style="stroke:black; fill:none; stroke-width:0.5pt; text-anchor:middle"
     height="841px" width="595px" viewBox="0 0 841 595" version="1.1"
     font-family="Helvetica,Arial,FreeSans,Sans,sans,sans-serif"
     xmlns="http://www.w3.org/2000/svg">
EOT

printf qq~<text x="%d" y="%d" font-size="%d" text-anchor="middle">%d Times Table</text>\n~,
    $center_x, -150, $font * 2, $table;

print "\n<!-- rings -->\n";

for ( my $ring = 0 ; $ring < ( $table + 2 ) * $band_width; $ring += $band_width ) {

    printf qq~<circle cx="%d" cy="%d" r="%d" fill="none" fill-opacity="1"
    stroke="black" stroke-width="1" stroke-opacity="1" />\n~, $center_x, $center_y, $ring;

}

print "\n<!-- segments -->\n";

for ( my $angle = 0 ; $angle < 360; $angle += $seg_ang ) {

    my $x = cos( deg2rad ( $angle -90 ) ) * $spoke_length + $center_x;
    my $y = sin( deg2rad ( $angle -90 ) ) * $spoke_length + $center_y;

    printf qq~<line x1="%d" y1="%d" x2="%1.0f" y2="%1.0f" stroke="black" stroke-width="1" />\n~, $center_x, $center_y, $x, $y;

}

print "\n<!-- center circle with zero -->\n";

printf qq~\n<circle cx="%d" cy="%d" r="%d" stroke="black" stroke-width="1" 
    stroke-opacity="0.5" fill="white" fill-opacity="1" />\n
<text stroke="none" transform="translate(%d, %d) rotate(0)" font-size="%d" fill="black">0</text>\n~,
    $center_x, $center_y, $band_width, $center_x, $center_y + $num_offset / 2 , $font;

print "\n<!-- numbers -->\n";

for my $mult ( 1 .. $table ) {

    my $number_radius = $mult * $band_width + $num_offset;

    my $num = 1;

    for ( my $angle = 0 ; $angle < 360; $angle += $seg_ang ) {

        # was 72 for 10 segments
        my $x = cos( deg2rad ( $angle - ( 90 - $seg_ang / 2 ) ) ) * $number_radius + $center_x;
        my $y = sin( deg2rad ( $angle - ( 90 - $seg_ang / 2 ) ) ) * $number_radius + $center_y;

        printf qq~<text stroke="none" transform="translate(%d, %d) rotate(%d)" font-size="%d" fill="black">%d</text>\n~,
            $x, $y, $angle + 18, $font, $num++ * $mult ;

    }

}

print "\n</svg>\n";

